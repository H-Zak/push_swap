il faut free les chainlist quand il y a un probleme et a la fin si tout se passe bien
gerer pour 4
free la chainlist
enlever le printf c'est deja trier

possible de mettre l'actualisation des pos et tout dans les mouvement mais risque de ralentir car trop d'actualisation inutile
test1
PUSH DANS B

test actuelle 1 7 2 6 3 4 5
prochain test avec 8 chiffres pour tester la mediane

cd ; rm -rf test ; git clone git@github.com:Zheylkoss/push_swap.git test ; cd test ; git checkout opti ; make 

git add . ; git commit -m “orga” ; git push

4 1 2 3 ne fonctione pas ! a check

check targte pos et mouv
5 2 4 3 6 1

a   b

possibilite d'optimise : par exemple si on enchaine 2 rra dans une taille de 3 on peut juste faire un seul ra 
https://www.calculatorsoup.com/calculators/statistics/random-number-generator.php
je suis dans opti ?
52785 13912 76861 -7681 43998 93434 2688 99657 15386 660 ne fonctionne pas

SECURITE DE MALLOC :
ft_check.c;		int	check_doublons_int(t_list *a, char **tab); 				ligne 110
ft_big_sort.c;		int ft_big_sort(t_list **a, t_list **b, int j);        ligne 33					ok
ft_deplacement;			ft_target_pos;										ligne 94
ft_litllte sort.c		size_5												ligne 66
ft_lst_utils.c			t_list	*ft_lstnew(int content)						ligne54
ne pas oublier de free ne pas juste faire un return


verifier quoi faire si le malloc du split deconne
ou le lst new
verifier que tout ce free en cas d'erreur de malloc